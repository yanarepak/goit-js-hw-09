{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAASC,SAASC,cAAc,SAEtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAW,CAACF,WAAUC,SACtBE,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQL,GAERM,EAAON,E,GAETD,E,IAuBNL,EAAOc,iBAAiB,UAnBxB,SAAsBC,GACpBA,EAAMC,iBAON,IANA,IAAMC,EAAeF,EAAMG,cAAcC,SAErCC,EAAQC,OAAOJ,EAAaZ,MAAMiB,OAChCC,EAASF,OAAOJ,EAAaM,OAAOD,OACpCE,EAAOH,OAAOJ,EAAaO,KAAKF,OAE7BG,EAAW,EAAGA,GAAYF,EAAQE,IACzCtB,EAAcsB,EAASL,GACtBM,MAAK,SAAAC,G,IAAEvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAChBuB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IACrE2B,OAAI,SAAAL,G,IAAEvB,EAAQuB,EAARvB,SAASC,EAAKsB,EAALtB,MAChBuB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAuCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IACtEe,GAAOI,EAEVxB,EAAOkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form')\n\nfunction createPromise(position, delay) {\n  const dataInfo = {position, delay,}\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(dataInfo)\n      } else {\n        reject(dataInfo)\n      }\n    },delay);\n})\n}\n\nfunction handleSubmit(event){\n  event.preventDefault();\n  const formElements = event.currentTarget.elements;\n\n  let delay = Number(formElements.delay.value);\n  const amount = Number(formElements.amount.value);\n  const step = Number(formElements.step.value);\n\n  for (let position = 0; position <= amount; position++) {\n    createPromise(position,delay)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)} )\n    .catch(({position,delay}) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)});\n   delay += step;\n  }\n  formEl.reset();\n}\n\nformEl.addEventListener('submit', handleSubmit);\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n//       } else {\n//         reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`))\n//       }\n//     },delay);\n// })\n// }\n\n// function handleSubmit(event){\n//   event.preventDefault();\n//   const formElements = event.currentTarget.elements;\n\n//   let delay = Number(formElements.delay.value);\n//   const amount = Number(formElements.amount.value);\n//   const step = Number(formElements.step.value);\n\n//   for (let position = 0; position <= amount; position++) {\n//     createPromise(position,delay)\n//     .then(value => value)\n//     .catch(error => error);\n//    delay += step;\n//   }\n// }\n\n// formEl.addEventListener('submit', handleSubmit);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","dataInfo","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","formElements","currentTarget","elements","delay1","Number","value","amount","step","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.48587713.js.map"}